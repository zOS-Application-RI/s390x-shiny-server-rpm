name: CI to Docker Hub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  SHINY_VERSION: 1.5.18.0
  ARCH: s390x
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      # - 
        # name: Linelint
        # uses: fernandrone/linelint@0.0.4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          install: true
      -  
        name: Generate build ID
        id: prep
        run: |
          branch=${GITHUB_REF##*/}
          # sha=${GITHUB_SHA::8}
          # ts=$(date +%s)
          ts=$(date +%Y-%m-%d--%H-%M)
          echo "::set-output name=BUILD_ID::${branch}-${ts}"          

      -     
        name: Cache Docker layers
        uses: actions/cache@v3.2.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Login to Redhat
        uses: docker/login-action@v1.10.0
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_ACCESS_TOKEN }}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1.10.0
        with:
          registry: registry.access.redhat.com
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2.7.0
        with:
          context: ./
          file: ./Dockerfile
          # push: true
          load: true
          # platforms: linux/amd64, linux/arm64, linux/ppc64le, linux/s390x
          platforms: linux/s390x
          # platforms: linux/amd64, linux/s390x
          # platforms: linux/s390x
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest, 
                ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:v1,
                ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.prep.outputs.BUILD_ID }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      
      - 
        uses: shrink/actions-docker-extract@v1
        id: extract
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          path: /shiny-server/packaging/build/shiny-server-${SHINY_VERSION}-${ARCH}.rpm
      - 
        name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: v${SHINY_VERSION}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - 
        name: Upload Dist
        uses: actions/upload-artifact@v2
        with:
          path: ${{ steps.extract.outputs.destination }}
          name: shiny-server-${SHINY_VERSION}-${arch}.rpm